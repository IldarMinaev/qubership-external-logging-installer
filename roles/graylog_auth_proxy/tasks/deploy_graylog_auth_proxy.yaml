---
- name: Set docker image with registry
  set_fact:
    graylog_auth_proxy_image: "{{ docker_registry }}/{{ graylog_auth_proxy_image }}"
  when:
    - docker_registry is defined
    - docker_registry != 0

- name: Set default graylog-auth-proxy volumes
  set_fact:
    proxy_volumes:
      - "{{ graylog_volume }}/graylog-auth-proxy/config/config.yaml:/usr/src/app/config.yaml:ro,z"
      - "{{ graylog_volume }}/graylog-auth-proxy/ssl/:/usr/share/ssl/:ro,z"

- name: Add htpasswd volume
  when:
    - htpasswd is defined
    - htpasswd is not none
    - htpasswd | trim | length > 0
  set_fact:
    proxy_volumes: "{{ proxy_volumes + htpasswd_volume }}"
  vars:
    htpasswd_volume:
      - "{{ htpasswd }}:/usr/src/app/.htpasswd:ro,z"

- name: Pull graylog_auth_proxy image
  docker_image:
    name: "{{ graylog_auth_proxy_image }}"
    timeout: "{{ docker_container_timeout }}"
    source: pull
  when:
    - not docker_registry_validate_certs|bool

- name: Pull graylog_auth_proxy image with local CA
  docker_image:
    name: "{{ graylog_auth_proxy_image }}"
    timeout: "{{ docker_container_timeout }}"
    source: pull
    ca_cert: "{{ ssl_data_host_path }}/{{ docker_registry_ca_cert_file }}"
    validate_certs: true
  when:
    - docker_registry_validate_certs|bool
    - docker_registry_ca_cert_file is defined
    - docker_registry_username is not defined
    - docker_registry_password is not defined

- name: Pull graylog_auth_proxy image without local CA
  docker_image:
    name: "{{ graylog_auth_proxy_image }}"
    timeout: "{{ docker_container_timeout }}"
    source: pull
    validate_certs: true
  when:
    - docker_registry_validate_certs|bool
    - docker_registry_ca_cert_file is not defined
    - docker_registry_username is not defined
    - docker_registry_password is not defined

- name: Create and start a 'graylog_auth_proxy' container
  docker_container:
    name: graylog_auth_proxy
    image: "{{ graylog_auth_proxy_image }}"
    state: started
    purge_networks: true
    recreate: true
    restart_policy: always
    security_opts:
      - no-new-privileges
    tmpfs:
      - /tmp
    read_only: true
    volumes: "{{ proxy_volumes }}"
    ports:
      - 8888:8888
    networks:
      - name: logging
        aliases:
          - graylog_auth_proxy
    command: python /usr/src/app/graylog_auth_proxy.py --config "./config.yaml"

- name: Wait for container will be started
  command: docker inspect --format={{ '{{.State.Status}}' }} graylog_auth_proxy
  register: result
  until: result.stdout == 'running'
  retries: 5
  delay: 2